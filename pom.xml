<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.sunflower</groupId>
    <artifactId>sunflower</artifactId>
    <version>1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>sf-bom</artifactId>
  <packaging>pom</packaging>

  <name>sunflower bom</name>

  <description>
    Bill of materials to make sure a consistent set of versions is used for Sunflower generics.
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <sf-framework.version>1.5.0</sf-framework.version>
    <sf-ewf.version>1.2.1-SNAPSHOT</sf-ewf.version>

    <guava.version>23.2-jre</guava.version>
    <guice.version>4.1.0</guice.version>
    <jackson.version>2.9.2</jackson.version>
    <metrics3.version>3.2.5</metrics3.version>
    <slf4j.version>1.7.25</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <h2.version>1.4.196</h2.version>
    <mysql.version>6.0.6</mysql.version>
    <postgresql.version>42.1.4</postgresql.version>
    <freemarker.version>2.3.26-incubating</freemarker.version>
    <mybatis.version>3.4.5</mybatis.version>
    <undertow.version>1.4.20.Final</undertow.version>
    <netty.version>4.1.16.Final</netty.version>
    <okhttp.version>3.9.0</okhttp.version>
    <retrofit.version>2.3.0</retrofit.version>
    <okio.version>1.13.0</okio.version>
    <jwt.version>3.2.0</jwt.version>
    <validator.version>5.4.1.Final</validator.version>
    <websocket.version>1.1</websocket.version>
    <sharding.jdbc.version>1.5.4</sharding.jdbc.version>
    
    <cassandra.driver.version>3.3.0</cassandra.driver.version>
    <jedis.version>2.9.0</jedis.version>
    <tomcat.jdbc.version>8.5.23</tomcat.jdbc.version>
    <ebean.version>11.3.1</ebean.version>
    <liquibase.version>3.5.3</liquibase.version>
    <spymemcached.version>2.12.3</spymemcached.version>
    <woodstox.version>5.0.3</woodstox.version>
    <commons-email.version>1.4</commons-email.version>
    <classmate.version>1.3.4</classmate.version>
    <hessian.version>4.0.38</hessian.version>
    <commons-lang3.version>3.6</commons-lang3.version>
    <commons-text.version>1.1</commons-text.version>
    <httpclient.version>4.5.3</httpclient.version>
    <cglib.version>3.2.5</cglib.version>
    <prettytime.version>4.0.1.Final</prettytime.version>
    <javax.el.version>3.0.0</javax.el.version>
    <javapoet.version>1.9.0</javapoet.version>
    <argparse4j.version>0.8.1</argparse4j.version>
    <jsr305.version>3.0.2</jsr305.version>

    <junit.version>4.12</junit.version>
    <java-hamcrest.version>2.0.0.0</java-hamcrest.version>
    <hamcrest.version>1.3</hamcrest.version>
    <mockito.version>2.10.0</mockito.version>
    <assertj.version>3.6.2</assertj.version>

    <shiro.version>1.4.0</shiro.version>
    <reflections.version>0.9.11</reflections.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.1.0</version>
      </dependency>
            
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-core</artifactId>
          <version>${shiro.version}</version>
      </dependency>

      <!-- excellent io lib -->
      <dependency>
        <groupId>com.squareup.okio</groupId>
        <artifactId>okio</artifactId>
        <version>${okio.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${validator.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>javax.el</artifactId>
        <version>${javax.el.version}</version>
      </dependency>

      <!-- command line tool. -->
      <dependency>
        <groupId>net.sourceforge.argparse4j</groupId>
        <artifactId>argparse4j</artifactId>
        <version>${argparse4j.version}</version>
      </dependency>

      <!-- java api for generate java source file. -->
      <dependency>
        <groupId>com.squareup</groupId>
        <artifactId>javapoet</artifactId>
        <version>${javapoet.version}</version>
      </dependency>

      <!-- 时间格式化 -->
      <dependency>
        <groupId>org.ocpsoft.prettytime</groupId>
        <artifactId>prettytime</artifactId>
        <version>${prettytime.version}</version>
      </dependency>

      <!-- Clean, lightweight protocol buffers for Android and Java. -->
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>retrofit</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>converter-jackson</artifactId>
        <version>${retrofit.version}</version>
      </dependency>

      <!-- 网络框架 -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-tcnative-boringssl-static</artifactId>
        <version>2.0.6.Final</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-handler</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec-http</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec-http2</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport-native-epoll</artifactId>
        <version>${netty.version}</version>
        <classifier>linux-x86_64</classifier>
      </dependency>

      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-core</artifactId>
        <version>${undertow.version}</version>
      </dependency>

      <!-- google 开源框架 -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-multibindings</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-assistedinject</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>

      <dependency>
        <groupId>aopalliance</groupId>
        <artifactId>aopalliance</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>${cglib.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- apache commons library. -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons-text.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>${commons-email.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>

      <!-- web stuff -->
      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>${jwt.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.websocket</groupId>
        <artifactId>javax.websocket-api</artifactId>
        <version>${websocket.version}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <!-- ewf-maven-plugin -->
      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-exec</artifactId>
        <version>1.9</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>3.5</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>3.3.9</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>3.3.9</version>
      </dependency>

      <!-- json serialize -->
      <dependency>
        <groupId>com.caucho</groupId>
        <artifactId>hessian</artifactId>
        <version>${hessian.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.fasterxml</groupId>
        <artifactId>classmate</artifactId>
        <version>${classmate.version}</version>
      </dependency>

      <!-- Woodstox as a proper Stax API implementation -->
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>${woodstox.version}</version>
      </dependency>

      <!-- ehcache implementation -->
      <!-- IMPORTANT: only pullservicelocatorcore (~1MB) vs. entire distro which includes a server (~7MB) -->
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache-core</artifactId>
        <version>2.6.11</version>
      </dependency>

      <dependency>
        <groupId>org.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>3.3.1</version>
      </dependency>

      <dependency>
        <groupId>javax.cache</groupId>
        <artifactId>cache-api</artifactId>
        <version>1.0.0</version>
      </dependency>

      <!-- memcached client -->
      <dependency>
        <groupId>net.spy</groupId>
        <artifactId>spymemcached</artifactId>
        <version>${spymemcached.version}</version>
      </dependency>

      <!-- database framework -->
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.mattbertolini</groupId>
        <artifactId>liquibase-slf4j</artifactId>
        <version>2.0.0</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-core</artifactId>
        <version>1.3.5</version>
      </dependency>

      <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper</artifactId>
        <version>5.1.2</version>
      </dependency>

      <dependency>
        <groupId>io.ebean</groupId>
        <artifactId>ebean</artifactId>
        <version>${ebean.version}</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>1.1.3</version>
      </dependency>

      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>2.7.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-jdbc</artifactId>
        <version>${tomcat.jdbc.version}</version>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>

      <!-- 当当网 分库分表 -->
      <dependency>
        <groupId>com.dangdang</groupId>
        <artifactId>sharding-jdbc-core</artifactId>
        <version>${sharding.jdbc.version}</version>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/com.datastax.cassandra/cassandra-driver-core -->
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>${cassandra.driver.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>

      <!-- Metrics -->
      <dependency>
        <groupId>com.papertrail</groupId>
        <artifactId>profiler</artifactId>
        <version>1.0.2</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-json</artifactId>
        <version>${metrics3.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-annotation</artifactId>
        <version>${metrics3.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-jvm</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-healthchecks</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-logback</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-httpclient</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-ganglia</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-graphite</artifactId>
        <version>${metrics3.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Logging dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-access</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Test dependencies -->

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>4.5.3</version>
      </dependency>

      <dependency>
        <groupId>com.devbliss.doctest</groupId>
        <artifactId>doctest</artifactId>
        <version>0.9.1</version>
      </dependency>

      <dependency>
        <groupId>org.doctester</groupId>
        <artifactId>doctester-core</artifactId>
        <version>1.1.6</version>
      </dependency>

      <!-- A very nice abstraction for making selenum tests: -->
      <dependency>
        <groupId>org.fluentlenium</groupId>
        <artifactId>fluentlenium-junit</artifactId>
        <version>3.2.0</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>htmlunit-driver</artifactId>
        <version>2.26</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>java-hamcrest</artifactId>
        <version>${java-hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugin-testing</groupId>
        <artifactId>maven-plugin-testing-harness</artifactId>
        <version>3.1.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-compat</artifactId>
        <version>3.3.9</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.google.code.tempus-fugit</groupId>
        <artifactId>tempus-fugit</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.icegreen</groupId>
        <artifactId>greenmail</artifactId>
        <version>1.5.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>1.5.6</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>1.5.6</version>
        <scope>test</scope>
      </dependency>

      <!-- smserverhttp library for unit tests that don't need power of httpclient -->
      <dependency>
        <groupId>com.github.kevinsawicki</groupId>
        <artifactId>http-request</artifactId>
        <version>6.0</version>
        <scope>test</scope>
      </dependency>

      <!-- sf framework modules -->
      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-core</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-util</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-jackson</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-validation</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-configuration</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-logging</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-guice</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-lifecycle</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-cache</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-testing</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-metrics</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-metrics-ganglia</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-metrics-graphite</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-undertow</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-reflect</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-extension</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-db</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ebean</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-migrations</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-postoffice</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-client</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-mybatis</artifactId>
        <version>${sf-framework.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-core</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-freemarker</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-auth</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-websocket</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-xml</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.sunflower</groupId>
        <artifactId>sf-ewf-undertow</artifactId>
        <version>${sf-ewf.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
